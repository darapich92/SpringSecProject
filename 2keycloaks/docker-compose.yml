services:
  keycloak1:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak1
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_PROXY_HEADERS: xforwarded
      KC_CACHE: ispn
      KC_CACHE_STACK: tcp
    ports:
      - "2020:8080"  # Expose the port for internal Docker network communication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/master"]
      interval: 30s
      retries: 3
      start_period: 40s
      timeout: 20s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring-network


  keycloak2:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak2
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_PROXY_HEADERS: xforwarded
      KC_CACHE: ispn
      KC_CACHE_STACK: tcp
    ports:
      - "2021:8080"  # Expose the port for internal Docker network communication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/master"]
      interval: 30s
      retries: 3
      start_period: 40s
      timeout: 20s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
     - spring-network

  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak", "-d", "keycloak"]
      interval: 30s
      retries: 3
      start_period: 40s
      timeout: 20s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
     - spring-network

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: localhost
    ports:
      - "80:80"  # Expose NGINX on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Custom NGINX configuration file
    depends_on:
      - keycloak1
      - keycloak2
    networks:
      - spring-network
      

volumes:
  postgres_data:

networks:
  spring-network: